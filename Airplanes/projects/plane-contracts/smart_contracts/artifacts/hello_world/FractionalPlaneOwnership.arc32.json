{
    "hints": {
        "createAirplaneListing(string,uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "getListing(uint64)(string,uint64,uint64,uint64,uint64)": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "output": {
                    "name": "AirplainShare",
                    "elements": [
                        [
                            "address",
                            "string"
                        ],
                        [
                            "totalShares",
                            "uint64"
                        ],
                        [
                            "availableShares",
                            "uint64"
                        ],
                        [
                            "pricePerShare",
                            "uint64"
                        ],
                        [
                            "privatePlaneID",
                            "uint64"
                        ]
                    ]
                }
            }
        },
        "getAlgoBalance(account)uint64": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "FractionalPlaneOwnership",
        "methods": [
            {
                "name": "createAirplaneListing",
                "args": [
                    {
                        "type": "string",
                        "name": "planeAddress"
                    },
                    {
                        "type": "uint64",
                        "name": "shares"
                    },
                    {
                        "type": "uint64",
                        "name": "pricePerShare"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "getListing",
                "args": [
                    {
                        "type": "uint64",
                        "name": "assetId"
                    }
                ],
                "readonly": true,
                "returns": {
                    "type": "(string,uint64,uint64,uint64,uint64)"
                }
            },
            {
                "name": "getAlgoBalance",
                "args": [
                    {
                        "type": "account",
                        "name": "user"
                    }
                ],
                "readonly": true,
                "returns": {
                    "type": "uint64"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}